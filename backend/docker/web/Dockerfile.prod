# FROM ruby:3.1.2
FROM ruby:3.1.2-alpine

ARG BASE_URL
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG DB_DATABASE
ARG DB_USERNAME
ARG DB_PASSWORD
ARG DB_HOST
ARG COOKIES_SAME_SITE

ENV BASE_URL $BASE_URL
ENV AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID
ENV AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY
ENV DB_DATABASE  $DB_DATABASE
ENV DB_USERNAME  $DB_USERNAME
ENV DB_PASSWORD  $DB_PASSWORD
ENV DB_HOST  $DB_HOST
ENV COOKIES_SAME_SITE $COOKIES_SAME_SITE
ENV LANG C.UTF-8
ENV APP_ROOT /app
ENV BUNDLE_JOBS 4

# ENV BUNDLER_VERSION 2.3.25

RUN mkdir $APP_ROOT
WORKDIR $APP_ROOT

COPY Gemfile $APP_ROOT/Gemfile
COPY Gemfile.lock $APP_ROOT/Gemfile.lock

RUN apk update && \
    apk upgrade && \
    apk add --no-cache linux-headers libxml2-dev make gcc libc-dev nodejs yarn tzdata bash mysql-dev && \
    apk add --no-cache -t .build-packages --no-cache build-base curl-dev mysql-client && \
    bundle install -j4 && \
    apk del --purge .build-packages

# RUN gem install bundler -v $BUNDLER_VERSION
# RUN bundle -v
# RUN bundle install

COPY . $APP_ROOT

# add a script to be executed every time the container starts.
# COPY ./docker/web/entrypoint.sh /usr/bin/
COPY docker/web/entrypoint.sh /usr/bin/
RUN chmod +x /usr/bin/entrypoint.sh
ENTRYPOINT ["entrypoint.sh"]

RUN mkdir -p tmp/sockets
RUN mkdir -p tmp/pids

VOLUME $APP_ROOT/public
VOLUME $APP_ROOT/tmp

# EXPOSE 3000

# 起動の度にデフォルトでrails sする(entrypoint.sh)に持たせても良い
CMD ["bundle", "exec", "rails", "s", "-e", "production"]