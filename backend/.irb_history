exit
User.all
User
exit
User
User.first
User,all
User.all
exit
User.all
User.first
User.delete
User.all
User.destroy
User
User.destroy(id: 1)
User.all
User.destroy(user_id: 1)
user = User.first
user.destroy
User.first
exit
User.all
User.all
User.first
User.all
exit
user = User.new
Hirb.disable
user = User.new
user.save
user.errors.full_messages
user.password = "あああああああああ"
user.save
user.errors.full_messages
exit
User.all
exit
User.a;;
User.all
exit
user = User.first
user
user.remember("a")
user
user.forget
user
reload
reload!
user = User.first
user
user.forget
user
token1 = UserAuth::RefreshToken.new(user_id: user.id)
token1
token1.payload[:jti]
user.reload
user.refresh_jti == token1.payload[:jti]
UserAuth::RefreshToken,new(token: token1.token)
UserAuth::RefreshToken.new(token: token1.token)
UserAuth::RefreshToken.new(token: token1.token).entity_for_user
exit
Rails.root
#{Rails.root}/db/seeds.rb
/db/seeds.rb
db/seeds.rb
./db/seeds.rb
#{Rails.root}/../db/seeds.rb
exit
exit
Rails.root.dirname
Rails.root
#{Rails.root.dirname}/db/seeds.rb
#{Rails.root.dirname}db/seeds.rb
#{Rails.root}db/seeds.rb
#{Rails.root}/db/seeds.rb
#{Rails.root}/jobs/application_job.rb
Rals.root
Rails.root
Rails.root.to_s
"#{Rails.root}/../".to_s
"#{Rails.root}/db/seeds.rb".to_s
path
ls
pwd
exit
Hirb.disable
user = User.first
token = UserAuth::AccessToen.new(user_id: user.id)
token = UserAuth::AccessToken.new(user_id: user.id)
tokne
token
UserAuth::AccessToken.new(token: token.token)
UserAuth::AccessToken.new(token: token.token).entity_for_user
Time.at(token.payload[:exp])
token = UserAuth::AccessToken.new(user_id: user.id, payload: {lifetime: 1.hours})
token
Time.at(token.payload[:exp])
token.lifetime_text
token = UserAuth::AccessToken.new(user_id: user.id, payload: {lifetime: 1.day})
token.lifetime_text
exit
user = User.first
user
user.encode_access_token
user.to_access_token
user.encode_refresh_token
user.to_encode_refresh_token
user.to_refresh_token
encode = user.encode_refresh_token
encode
User.from_refresh_token(encode.token)
user
user.reload
access_token = user.to_access_token
access_token
User.from_access_token(access_token)
User.decode_access_token(access_token)
exit
User.first.as_json
User.first.as_json.merge(sub: sub)
User.first.as_json.merge(sub: "sub")
User.first.as_json.merge(sub: "sub").with_indifferent_access
User.first.response_json(sub: "aaa")
user = User.first.response_json(sub: "aaa")
user.avatar
user.avatar.url
user
user.id
exit
exit
User.last
user = User.last
user
user.remember("a")
user
user.forget
user
token1 = UserAuth::RefreshToken.new(user_id:user.id)
token1
token1.payload[:jti]
user.refresh_jti == token1.payload[:jti]
user
user
token2 = UserAuth::RefreshToken.new(user_id:user.id)
user
token2 = UserAuth::RefreshToken.new(user_id: user.id)
user
reload!
user
user.reload
user.refresh_jti == token2.payload[:jti]
UserAuth::RefreshToken.new(token: token2.token).entity_for_user
UserAuth::RefreshToken.new(user_id: user.id)
user.reload
user.refresh_jti == token2.payload[:jti]
Hirb.disable
user = user.last
user = User.last
user
user.forget
user
token3 = UserAuth::AccessToken.new(user_id: user.id)
token3
UserAuth::AccessToken.new(token: token3.token)
UserAuth::AccessToken.new(token: token3.token).entity_for_user
exit
user = User.first
user
user.encode_access_token
user
user.reload
user.to_access_token
user.encode_refresh_token
user.to_refresh_token
encode = user.encode_refresh_token
encode
User.from_refresh_token(encode.token)
reload
reload!
user
user.reload
User.first.as_json
User.first.response_json(sub: "aaa")
exit
User.find(1)
exit
User.last
user = User.last
user.destroy!
user.last
User.last
user = User.last
user.destroy
user = User.last
user
user.destroy
User.last
exit
user = User.last
user
user.articles.create!(title: "こんにちは", content: "これはコンテンツ", level_list_id: 2)
user.articles.create!(title: "こんにちは", content: "これはコンテンツ", level_list_id: 2)
reload
reload!
user.articles.create!(title: "こんにちは", content: "これはコンテンツ", level_list_id: 2)
reload!
user.articles.create!(title: "こんにちは", content: "これはコンテンツ", level_list_id: 2)
user.articles
Article.create!(title: "こんにちは", content: "これはコンテンツ", user_id: 21, level_list_id:1)
article = Article.find(1)
article.user
article.level_list
Article.create!(title: "こんにちは", content: "これはコンテンツ", user_id: 21, level_list_id:2)
article = Article.find(2)
article.level_list
article.user
exit
Article.last
Article.last.destroy
Article.last.destroy
article.all
Article.all
User.last
User.last.destroy
User.last.destroy]
User.last.destroy
User.last.destroy
exit
article.first
Article.first
Article.first.level_list
Article.first.level_list.name
Article.first.user
Article.first.user.avatar
Article.first.user.nickname
exit
